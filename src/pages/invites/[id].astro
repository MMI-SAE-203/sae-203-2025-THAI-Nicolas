---
import Layout from "../../layouts/Layout.astro";
import CardEvenements from "../../components/CardEvenements.astro";
import { getInviteById, getAllEvents } from "../../../backend/backend.mjs";

const { id } = Astro.params;
const invite = await getInviteById(id);

// Récupérer les événements associés à cet invité
const allEvents = await getAllEvents();
// Filtrer les événements où l'invité est associé
const evenementsAssocies = allEvents.filter(
  (event) => event.expand?.invite_associes?.id === id
);

if (!invite) {
  return Astro.redirect("/invites");
}
---

<Layout>
  <section>
    <header>
      <h1>{invite.prenom} {invite.nom}</h1>
    </header>
    <div>
      <div class="flex flex-col justify-center items-center">
        <img src={invite.img} alt={`Photo de ${invite.prenom} ${invite.nom}`} />
        <p>{invite.metier}</p>
      </div>
      <div>
        <h2>Biographie</h2>
        <div
          class="flex-col justify-center items-center text-lg mx-8 [&>p]:pb-6"
          set:html={invite.biographie}
        />
      </div>
    </div>
  </section>

  <section>
    <header>
      <h2>Ses Apparitions</h2>
    </header>
    <div
      class="flex-col justify-center items-center text-lg mx-8 [&>p]:pb-6"
      set:html={invite.films}
    />
  </section>

  <section>
    <header>
      <h2>Événements Associés</h2>
    </header>
    
    {evenementsAssocies.length > 0 ? (
      <ul class="flex flex-col gap-6">
        {evenementsAssocies.map(evenement => (
          <li class="w-full max-w-3xl mx-auto">
            <CardEvenements {...evenement} />
          </li>
        ))}
      </ul>
    ) : (
      <p class="text-center text-gray-500 my-4">Aucun événement associé à cet invité pour le moment.</p>
    )}
  </section>
</Layout>
